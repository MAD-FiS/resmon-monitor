# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.measurement import Measurement  # noqa: F401,E501
from swagger_server import util


class InlineResponse200(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, hostname: str=None, measurements: List[Measurement]=None):  # noqa: E501
        """InlineResponse200 - a model defined in Swagger

        :param hostname: The hostname of this InlineResponse200.  # noqa: E501
        :type hostname: str
        :param measurements: The measurements of this InlineResponse200.  # noqa: E501
        :type measurements: List[Measurement]
        """
        self.swagger_types = {
            'hostname': str,
            'measurements': List[Measurement]
        }

        self.attribute_map = {
            'hostname': 'hostname',
            'measurements': 'measurements'
        }

        self._hostname = hostname
        self._measurements = measurements

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse200':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200 of this InlineResponse200.  # noqa: E501
        :rtype: InlineResponse200
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hostname(self) -> str:
        """Gets the hostname of this InlineResponse200.


        :return: The hostname of this InlineResponse200.
        :rtype: str
        """
        return self._hostname

    @hostname.setter
    def hostname(self, hostname: str):
        """Sets the hostname of this InlineResponse200.


        :param hostname: The hostname of this InlineResponse200.
        :type hostname: str
        """

        self._hostname = hostname

    @property
    def measurements(self) -> List[Measurement]:
        """Gets the measurements of this InlineResponse200.


        :return: The measurements of this InlineResponse200.
        :rtype: List[Measurement]
        """
        return self._measurements

    @measurements.setter
    def measurements(self, measurements: List[Measurement]):
        """Sets the measurements of this InlineResponse200.


        :param measurements: The measurements of this InlineResponse200.
        :type measurements: List[Measurement]
        """

        self._measurements = measurements

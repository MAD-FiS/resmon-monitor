# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.metric import Metric  # noqa: F401,E501
from swagger_server import util


class MetricList(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, hostname: str=None, metrics: List[Metric]=None):  # noqa: E501
        """MetricList - a model defined in Swagger

        :param hostname: The hostname of this MetricList.  # noqa: E501
        :type hostname: str
        :param metrics: The metrics of this MetricList.  # noqa: E501
        :type metrics: List[Metric]
        """
        self.swagger_types = {
            'hostname': str,
            'metrics': List[Metric]
        }

        self.attribute_map = {
            'hostname': 'hostname',
            'metrics': 'metrics'
        }

        self._hostname = hostname
        self._metrics = metrics

    @classmethod
    def from_dict(cls, dikt) -> 'MetricList':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MetricList of this MetricList.  # noqa: E501
        :rtype: MetricList
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hostname(self) -> str:
        """Gets the hostname of this MetricList.


        :return: The hostname of this MetricList.
        :rtype: str
        """
        return self._hostname

    @hostname.setter
    def hostname(self, hostname: str):
        """Sets the hostname of this MetricList.


        :param hostname: The hostname of this MetricList.
        :type hostname: str
        """

        self._hostname = hostname

    @property
    def metrics(self) -> List[Metric]:
        """Gets the metrics of this MetricList.


        :return: The metrics of this MetricList.
        :rtype: List[Metric]
        """
        return self._metrics

    @metrics.setter
    def metrics(self, metrics: List[Metric]):
        """Sets the metrics of this MetricList.


        :param metrics: The metrics of this MetricList.
        :type metrics: List[Metric]
        """

        self._metrics = metrics

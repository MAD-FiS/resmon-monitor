---
swagger: "2.0"
info:
  description: "This is simple resource monitor which allows to view how much are\
    \ used all resources on all monitored hosts.\n"
  version: "0.1.0"
  title: "ResMon - monitorowanie rozproszonych zasob√≥w"
  contact:
    name: "MAD-Team"
    email: "tbajorek3@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "example.com"
tags:
- name: "resources"
- name: "measurements"
- name: "metrics"
paths:
  /resources:
    get:
      tags:
      - "resources"
      summary: "Get list of hosts"
      operationId: "get_hosts"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              type: "string"
      x-swagger-router-controller: "swagger_server.controllers.resources_controller"
  /measurements:
    get:
      tags:
      - "measurements"
      summary: "Get measurements from all hosts"
      operationId: "get_measurements"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200"
      x-swagger-router-controller: "swagger_server.controllers.measurements_controller"
  /measurements/{hostname}:
    get:
      tags:
      - "measurements"
      summary: "Get measurements from particular host"
      operationId: "get_measurements_host"
      produces:
      - "application/json"
      parameters:
      - name: "hostname"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Measurement"
        400:
          description: "Unknown host"
      x-swagger-router-controller: "swagger_server.controllers.measurements_controller"
  /measurements/{hostname}/{metric_id}:
    get:
      tags:
      - "measurements"
      summary: "Get measurements from particular host of particular metric"
      operationId: "get_measurements_host_metric"
      produces:
      - "application/json"
      parameters:
      - name: "hostname"
        in: "path"
        required: true
        type: "string"
      - name: "metric_id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Value"
        400:
          description: "Unknown host or metric"
      x-swagger-router-controller: "swagger_server.controllers.measurements_controller"
  /metrics:
    get:
      tags:
      - "metrics"
      summary: "Get available metrics"
      operationId: "get_metrics"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MetricList"
      x-swagger-router-controller: "swagger_server.controllers.metrics_controller"
  /metric:
    post:
      tags:
      - "metric"
      summary: "Add complex metric"
      operationId: "post_metric"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "dummy"
        required: false
        schema:
          $ref: "#/definitions/dummy"
      responses:
        201:
          description: "metric_id of created complex metric"
          schema:
            type: "string"
        400:
          description: "Incorrect metric data"
      x-swagger-router-controller: "swagger_server.controllers.metric_controller"
  /metric/{metric_id}:
    delete:
      tags:
      - "metric"
      summary: "Delete complex metric"
      operationId: "delete_metric"
      parameters:
      - name: "metric_id"
        in: "path"
        required: true
        type: "integer"
      responses:
        200:
          description: "Success"
        404:
          description: "Unknown metric"
      x-swagger-router-controller: "swagger_server.controllers.metric_controller"
definitions:
  Measurement:
    type: "object"
    properties:
      metric_id:
        type: "string"
      values:
        type: "array"
        items:
          $ref: "#/definitions/Value"
    example:
      metric_id: "metric_id"
      values:
      - time: "2000-01-23T04:56:07.000+00:00"
        value: 0.8008281904610115
      - time: "2000-01-23T04:56:07.000+00:00"
        value: 0.8008281904610115
  Value:
    type: "object"
    properties:
      time:
        type: "string"
        format: "date-time"
      value:
        type: "number"
        format: "double"
    example:
      time: "2000-01-23T04:56:07.000+00:00"
      value: 0.8008281904610115
  MetricList:
    type: "object"
    properties:
      hostname:
        type: "string"
      metrics:
        type: "array"
        items:
          $ref: "#/definitions/Metric"
    example:
      hostname: "hostname"
      metrics:
      - name: "name"
        base: true
      - name: "name"
        base: true
  Metric:
    type: "object"
    properties:
      name:
        type: "string"
      base:
        type: "boolean"
    example:
      name: "name"
      base: true
  inline_response_200:
    properties:
      hostname:
        type: "string"
      measurements:
        type: "array"
        items:
          $ref: "#/definitions/Measurement"
    example:
      hostname: "hostname"
      measurements:
      - metric_id: "metric_id"
        values:
        - time: "2000-01-23T04:56:07.000+00:00"
          value: 0.8008281904610115
        - time: "2000-01-23T04:56:07.000+00:00"
          value: 0.8008281904610115
      - metric_id: "metric_id"
        values:
        - time: "2000-01-23T04:56:07.000+00:00"
          value: 0.8008281904610115
        - time: "2000-01-23T04:56:07.000+00:00"
          value: 0.8008281904610115
  dummy:
    type: "object"
    properties:
      hostname:
        type: "string"
      metric_id:
        type: "string"
      description:
        type: "string"
      length:
        type: "integer"
      frequency:
        type: "integer"

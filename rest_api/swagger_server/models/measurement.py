# coding: utf-8

from __future__ import absolute_import

from typing import List, Dict  # noqa: F401

from rest_api.swagger_server.models.base_model_ import Model
from rest_api.swagger_server.models.point import Point  # noqa: F401,E501
from rest_api.swagger_server import util


class Measurement(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, metric_id: str=None, hostname: str=None, data: List[Point]=None):  # noqa: E501
        """Measurement - a model defined in Swagger

        :param metric_id: The metric_id of this Measurement.  # noqa: E501
        :type metric_id: str
        :param hostname: The hostname of this Measurement.  # noqa: E501
        :type hostname: str
        :param data: The data of this Measurement.  # noqa: E501
        :type data: List[Point]
        """
        self.swagger_types = {
            'metric_id': str,
            'hostname': str,
            'data': List[Point]
        }

        self.attribute_map = {
            'metric_id': 'metric_id',
            'hostname': 'hostname',
            'data': 'data'
        }

        self._metric_id = metric_id
        self._hostname = hostname
        self._data = data

    @classmethod
    def from_dict(cls, dikt) -> 'Measurement':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Measurement of this Measurement.  # noqa: E501
        :rtype: Measurement
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metric_id(self) -> str:
        """Gets the metric_id of this Measurement.

        Metric slug name e.g. `ram`, `cpu`  # noqa: E501

        :return: The metric_id of this Measurement.
        :rtype: str
        """
        return self._metric_id

    @metric_id.setter
    def metric_id(self, metric_id: str):
        """Sets the metric_id of this Measurement.

        Metric slug name e.g. `ram`, `cpu`  # noqa: E501

        :param metric_id: The metric_id of this Measurement.
        :type metric_id: str
        """

        self._metric_id = metric_id

    @property
    def hostname(self) -> str:
        """Gets the hostname of this Measurement.

        Target host (domain name)  # noqa: E501

        :return: The hostname of this Measurement.
        :rtype: str
        """
        return self._hostname

    @hostname.setter
    def hostname(self, hostname: str):
        """Sets the hostname of this Measurement.

        Target host (domain name)  # noqa: E501

        :param hostname: The hostname of this Measurement.
        :type hostname: str
        """

        self._hostname = hostname

    @property
    def data(self) -> List[Point]:
        """Gets the data of this Measurement.

        Actual timeseries  # noqa: E501

        :return: The data of this Measurement.
        :rtype: List[Point]
        """
        return self._data

    @data.setter
    def data(self, data: List[Point]):
        """Sets the data of this Measurement.

        Actual timeseries  # noqa: E501

        :param data: The data of this Measurement.
        :type data: List[Point]
        """

        self._data = data
